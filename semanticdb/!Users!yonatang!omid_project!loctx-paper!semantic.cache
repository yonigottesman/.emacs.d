;; Object loctx-paper/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "loctx-paper/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( ("PAPER" variable (:default-value ("main")) nil [37 48])
            ("LATEX" variable (:default-value ("pdflatex")) nil [68 86])
            ("BIBTEX" variable (:default-value ("bibtex")) nil [86 103])
            ("LATEX_FLAGS" variable (:default-value ("-shell-escape" "-halt-on-error")) nil [137 181])
            ("BIBTEX_FLAGS" variable (:default-value ("-terse")) nil [181 204])
            ("PDF" variable (:default-value ("$(PAPER).pdf")) nil [215 235])
            ("TEX_INPUTS" variable (:default-value ("$(wildcard *.tex)" "$(wildcard *.cls)")) nil [235 284])
            ("GENERATED_FIGS" variable (:default-value ("$(DIAFIGS:.dia=.eps)" "$(PNGFIGS:.png=.eps)")) nil [284 344])
            ("AUX" variable (:default-value ("$(PDF:.pdf=.aux)" "$(PDF:.pdf=.log)" "$(PDF:.pdf=.toc)" "$(PDF:.pdf=.lof)" "$(PDF:.pdf=.lot)" "$(PDF:.pdf=.bbl)" "$(PDF:.pdf=.blg)" "$(PDF:.pdf=.aux.bak)")) nil [345 499])
            (".PHONY" function (:arguments ("all" "clean")) nil [501 520])
            (".PRECIOUS" function (:arguments ("$(DVI)")) nil [520 538])
            ("all" function (:arguments ("$(PDF)")) nil [539 551])
            ("clean" function nil nil [552 601])
            ("%.pdf" function (:arguments ("$(TEX_INPUTS)" "%.bib")) nil [603 701])
            ("bib" function nil nil [703 765])
            ("watermark" function (:arguments ("all")) nil [766 882]))          
      :file "Makefile"
      :pointmax 884
      :fsize 883
      :lastmodtime '(22607 53076 0 0)
      :unmatched-syntax nil))
  :file "!Users!yonatang!omid_project!loctx-paper!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
